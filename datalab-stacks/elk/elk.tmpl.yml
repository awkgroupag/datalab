apiVersion: v1
kind: Service
metadata:
  labels:
    group: awkdatalab
    project: PROJECT_NAME
    app: PROJECT_NAME-elastic
  name: PROJECT_NAME-elastic
spec:
  type: NodePort
  ports:
    - port: DATALAB_ELK_ELASTICSEARCH_PORT
      targetPort: 9200
      name: rest-api
  selector:
    app: PROJECT_NAME-elastic
---
apiVersion: v1
kind: Service
metadata:
  labels:
    group: awkdatalab
    project: PROJECT_NAME
    app: PROJECT_NAME-elastic
  name: PROJECT_NAME-logstash
spec:
  type: NodePort
  ports:
  - port: DATALAB_ELK_LOGSTASH_PORT1
    targetPort: 5044
    name: logstash
  - port: DATALAB_ELK_LOGSTASH_PORT2
    targetPort: 9600
    name: monitoring
  selector:
    app: PROJECT_NAME-elastic
---
apiVersion: v1
kind: Service
metadata:
  labels:
    group: awkdatalab
    project: PROJECT_NAME
    app: PROJECT_NAME-elastic
  name: PROJECT_NAME-kibana
spec:
  type: ClusterIP
  ports:
    - port: DATALAB_ELK_KIBANA_PORT
      targetPort: 5601
      name: kibana
  selector:
    app: PROJECT_NAME-elastic
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    group: awkdatalab
    project: PROJECT_NAME
    app: PROJECT_NAME-elastic
  name: PROJECT_NAME-kibana
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.frontend.rule.type: PathPrefix
spec:
  rules:
  - http:
      paths:
      - path: /PROJECT_NAME-kibana
        pathType: Prefix
        backend:
          service:
            name: PROJECT_NAME-kibana
            port:
              number: DATALAB_ELK_KIBANA_PORT
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    group: awkdatalab
    project: PROJECT_NAME
    app: PROJECT_NAME-elastic
  name: PROJECT_NAME-elastic
spec:
  containers:
    - image: docker.elastic.co/elasticsearch/elasticsearch:8.0.1
      name: elasticsearch
      resources:
        requests:
          memory: "256Mi"
          cpu: "500m"
        limits:
          memory: "512Mi"
          cpu: "1000m"
      ports:
        - containerPort: 9200
          name: rest-api
        - containerPort: 9300
          name: intra-node
      env:
        - name: ES_JAVA_OPTS
          value: "-Xmx256m -Xms256m"
        # Use single node discovery in order to disable production mode and avoid bootstrap checks
        # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
        - name: discovery.type
          value: single-node
        - name: cluster.name
          value: PROJECT_NAME
      volumeMounts:
        - name: elastic-volume
          mountPath: /usr/share/elasticsearch/data
    - image: docker.elastic.co/logstash/logstash:8.0.1
      name: logstash
      resources:
        requests:
          memory: "256Mi"
          cpu: "500m"
        limits:
          memory: "512Mi"
          cpu: "1000m"
      ports:
        - containerPort: 5044
          name: beat
        - containerPort: 9600
          name: monitoring
      env:
      - name: ES_JAVA_OPTS
        value: "-Xmx256m -Xms256m"
      - name: elasticsearch.hosts
        value: http://127.0.0.1:9200
    - image: docker.elastic.co/kibana/kibana:8.0.1
      name: kibana
      resources:
        requests:
          memory: "256Mi"
          cpu: "500m"
        limits:
          memory: "512Mi"
          cpu: "1000m"
      ports:
        - containerPort: 5601
          name: kibana
      env:
      - name: ES_JAVA_OPTS
        value: "-Xmx256m -Xms256m"
      - name: server.name
        value: kibana
      - name: server.host
        value: "0"
      - name: elasticsearch.hosts
        value: http://127.0.0.1:9200
      - name: SERVER_BASEPATH
        value: /PROJECT_NAME-kibana
      - name: SERVER_REWRITEBASEPATH
        value: "true"
      - name: SERVER_PUBLICBASEURL
        value: "https://localhost/PROJECT_NAME-kibana"
  initContainers:
    - name: fix-permissions
      image: busybox
      command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
      securityContext:
        privileged: true
      volumeMounts:
      - name: elastic-volume
        mountPath: /usr/share/elasticsearch/data
    - name: increase-vm-max-map
      image: busybox
      command: ["sysctl", "-w", "vm.max_map_count=262144"]
      securityContext:
        privileged: true
    - name: increase-fd-ulimit
      image: busybox
      command: ["sh", "-c", "ulimit -n 65536"]
      securityContext:
        privileged: true
  volumes:
  - name: elastic-volume
    hostPath:
      path: DATALAB_DATA_DIR/PROJECT_NAME-elastic
      type: Directory
