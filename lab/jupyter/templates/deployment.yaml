{{- $fullName := include "common.names.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
        {{- if .Values.jupyter.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.jupyter.podLabels "context" $) | nindent 8 }}
        {{- end }}
        {{- if .Values.commonLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.commonLabels "context" $) | nindent 8 }}
        {{- end }}
      annotations:
        {{- if .Values.jupyter.podAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.jupyter.podAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .Values.commonAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ if .Values.controlboard }}kubernetes-full-namespace-access{{- else }}default{{- end }}
      terminationGracePeriodSeconds: 30
      {{- with .Values.jupyter }}
      securityContext:
        {{- if .sudo }}
        runAsUser: 0
        {{- else }}
        runAsUser: {{ $.Values.userId }}
        {{- end }}
        supplementalGroups: {{- range $group := .securityContext.supplementalGroups }}
        - {{ $group }}
        {{- end }}
        {{- if $.Values.controlboard }}
        # Necessary to set both fsGroup as well as runAsGroup to 65534 in
        # order to have access to the Kubernetes API token mounted
        # at /var/run/secrets/kubernetes.io/serviceaccount. Otherwise we'll
        # get a permission denied even for root. This is closely linked to
        # how butched up the Jupyter startup-script works with permissions
        runAsGroup: {{ $.Values.userGroup }}
        fsGroup: 65534
        {{- else }}
        runAsGroup: {{ $.Values.userGroup }}
        fsGroup: {{ .securityContext.fsGroup }}
        {{- end }}
        {{- if .securityContext.fsGroupChangePolicy }}
        fsGroupChangePolicy: {{ .securityContext.fsGroupChangePolicy }}
        {{- end }}
        {{- if .securityContext.runAsNonRoot }}
        runAsNonRoot: {{ .securityContext.runAsNonRoot }}
        {{- end }}
        {{- if .securityContext.seLinuxOptions }}
        seLinuxOptions: {{ .securityContext.seLinuxOptions }}
        {{- end }}
        {{- if .securityContext.seccompProfile }}
        seccompProfile: {{ .securityContext.seccompProfile }}
        {{- end }}
        {{- if .securityContext.sysctls }}
        sysctls: {{ .securityContext.sysctls }}
        {{- end }}
        {{- if .securityContext.windowsOptions }}
        windowsOptions: {{ .securityContext.windowsOptions }}
        {{- end }}
      {{- end }}
      containers:
        - imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          name: {{ .Chart.Name }}
          {{- with .Values.jupyter }}
          image: {{ .image.name }}:{{ .image.tag }}
          ports:
            - containerPort: 8888
          resources:
            {{- if $.Values.controlboard }}
            {{- toYaml .containers.resources.controlboard | nindent 12 }}
            {{- else }}
            {{- toYaml .containers.resources.nonControlboard | nindent 12 }}
            {{- end }}
          env:
            - name: JUPYTER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: jupyterToken
            - name: JUPYTER_ENABLE_LAB
              value: "yes"
            {{- if .sudo }}
            - name: GRANT_SUDO
              value: "yes"
            - name: NB_UID
              value: "{{ $.Values.userId }}"
            - name: NB_GID
              {{- if $.Values.controlboard }}
              value: "65534"
              {{- else }}
              value: "{{ $.Values.userGroup }}"
              {{- end }}
            {{- end }}
            {{- if .containers.extraEnvVars }}
            {{- toYaml .containers.extraEnvVars | nindent 12 }}
            {{- end }}
          args:
            - "start-notebook.sh"
            - "--ServerApp.base_url='/{{ $.Release.Namespace }}/{{ $.Release.Name }}'"
          {{- if .containers.args }}
          {{- toYaml .containers.args | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: work
              mountPath: {{ .containers.volumeMounts.mountPath.sourcecode | quote }}
            - name: data
              mountPath: {{ .containers.volumeMounts.mountPath.data | quote }}
            - name: jupyterdir
              mountPath: /home/jovyan/.jupyter
            - name: config-files-rest
              subPath: DO-NOT-SAVE-ANYTHING-HERE.md
              mountPath: "/home/jovyan/DO NOT SAVE ANYTHING HERE.md"
            {{- if $.Values.controlboard }}
            - name: config-files-rest
              subPath: jupyterhub_config-CONTROLBOARD.py
              mountPath: /usr/local/etc/jupyterhub/jupyterhub_config.d/my_config.py
            - name: config-files-rest
              subPath: overrides.json
              mountPath: "/opt/conda/share/jupyter/lab/settings/overrides.json"
            {{- else }}
            - name: config-files-rest
              subPath: jupyterhub_config.py
              mountPath: /usr/local/etc/jupyterhub/jupyterhub_config.d/my_config.py
            {{- end }}
            - name: config-files-rest
              subPath: pycodestyle
              mountPath: /home/jovyan/.config/pycodestyle
          {{- end }}
      volumes:
      - name: data
        hostPath:
          path: {{ required "You need to set the path for dataDirectory in myvalues.yaml!" .Values.dataDirectory | quote }}
          type: DirectoryOrCreate
      - name: work
        hostPath:
          path: {{ required "You need to set the path for sourcecodeDirectory in myvalues.yaml!" .Values.sourcecodeDirectory | quote }}
          type: DirectoryOrCreate
      - name: config-files-jupyterdir
        configMap:
          name: {{ include "common.names.fullname" . }}-jupyterdir
      - name: jupyterdir
        emptyDir: {}
      - name: config-files-rest
        configMap:
          name: {{ include "common.names.fullname" . }}-rest

      # We need an init container to allow for changes by the user
      # Just mounting files would lead to permission issues
      # NOTE: files without a file extension ("md" in readme.md)
      # will be turned into directories by Jupyter :-(
      initContainers:
      - name: setup-configs
        image: busybox:latest
        volumeMounts:
        - name: config-files-jupyterdir
          subPath: jupyter
          mountPath: /configfiles/.jupyter.zip
        - name: jupyterdir
          mountPath: /.jupyter
        command: 
        - sh
        - "-c"
        args: 
        - 
          echo Unzipping .jupyter directory, do NOT overwrite existing files &&
          unzip /configfiles/.jupyter.zip -n -d / &&
          echo Changing permissions to {{ $.Values.userId }}:{{ $.Values.userGroup }} &&
          chown -R {{ $.Values.userId }}:{{ $.Values.userGroup }} /.jupyter/*
